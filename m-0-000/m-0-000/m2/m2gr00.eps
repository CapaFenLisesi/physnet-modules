%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 108 450 317 564 
%%LanguageLevel: 1
%%Creator: CorelDRAW 9
%%Title: m2gr00.eps
%%CreationDate: Wed Jun 14 11:46:49 2000
%%For: Peter Signell
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW 9 Version 9.439
%Color profile:  Generic offset separations profile
%%BeginResource: procset wCorel9Dict 9.0 0
/wCorel9Dict 300 dict def wCorel9Dict begin
% Copyright (c)1992-1999 Corel Corporation
% All rights reserved.     v9.0 r0.5
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CurrentInkName_5 where{pop}{/CurrentInkName_5(Composite)def}
ifelse/$ink_5 where{pop}{/$ink_5 -1 def}ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0
def/$t 1 def/$n _ def/$o 0 def/$fil 0 def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def
/$T 1 def/$N _ def/$O 0 def/$PF false def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0
def/s1t 0 def/s1n _ def/$bkg false def/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op
false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm
matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/p{/$pm xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}
bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}ifelse}bd
/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp}bd
/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}bd
/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld/GetRgb
/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2 systemdict
/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def/SetHsb
systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get def
/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/setcustomcolor where{pop}{/setcustomcolor{exch aload pop SepMode_5 0 eq{pop
@tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll 5 rp 1
sub neg SetGry}ifelse}bd}ifelse/@scc_5{dup type/booleantype eq{setoverprint}{1
eq setoverprint}ifelse dup _ eq{pop setprocesscolor_5 pop}{findcmykcustomcolor
exch setcustomcolor}ifelse SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint
and not}ifelse}bd/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{
/ncolors xd/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop
pop exch pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd
/daqC xd pop pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}
ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub
{dup 3 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index
2 add get 255 div rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length 3 idiv getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4
mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add
get 255 div $dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop
$dat 3 1 roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}
image}ifelse}bd}ifelse/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5
/$ffpnt xd}bd/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/@sft{$tllx
$pxf add dup $tllx gt{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei
add}if/$ty xd}bd/@stb{pathbbox/$ury xd/$urx xd/$lly xd/$llx xd}bd/@ep{{cvx exec
}forall}bd/@tp{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei sub
$ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{/$in
false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0 $phei
rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3 index
sub Tl matrix currentmatrix/$ctm xd @ep pop pop pop pop}{pop pop}ifelse @rs}bd
/@th{@sft 0 1 $tly 1 sub{dup $psx mul $tx add{dup $llx gt{$pwid sub}{exit}
ifelse}loop exch $phei mul $ty exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1
roll add exch @tp pop}for pop pop}for}bd/@tv{@sft 0 1 $tlx 1 sub{dup $pwid mul
$tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}{exit}ifelse}loop 0 1
$tly 1 sub{$phei mul 3 copy sub @tp pop}for pop pop}for}bd/$fm 0 def/wfill{1
$fm eq{fill}{eofill}ifelse}bd/wclip{1 $fm eq{clip}{eoclip}ifelse}bd/@pf{@gs
$ctm setmatrix $pm concat @stb wclip @sv Bburx Bbury $pm itransform/$tury xd
/$turx xd Bbllx Bblly $pm itransform/$tlly xd/$tllx xd newpath $tllx $tlly m
$tllx $tury l $turx $tury l $turx $tlly l $tllx $tlly m @cp pathbbox @rs/$tury
xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx sub def/$hei $tury $tlly sub def
@gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{$t $c $m $y $k $n $o @scc_5{
SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei scale <00> 8 1 false[8 0 0 1 0
0]{}imagemask}{/$bkg true def}ifelse}if}ifelse @gr $wid 0 gt $hei 0 gt and{$pn
cvlit load aload pop/$pd xd 3 -1 roll sub/$phei xd exch sub/$pwid xd $wid $pwid
div ceiling 1 add/$tlx xd $hei $phei div ceiling 1 add/$tly xd $psx 0 eq{@tv}{
@th}ifelse}if @gr @np/$bkg false def}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{@pf}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$t $c $m $y $k $n $o @scc_5{wfill}
{@np}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp
F}bd/S{matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M
$Y $K $N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}
{@np}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}
bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true
def}{@gs $t $c $m $y $k $n $o @scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd
/$pyf xd/$pxf xd/$pn xd}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd
}bd/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/tcc{@cc}def/@i{@sm @gs @ii 6 index 1 ne
{/$frg true def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg
false def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd
/$lly xd/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi
string def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub
$ury $lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts
1 eq{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load
$bts 1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}
ifelse}ifelse}ifelse}bd systemdict/pdfmark known not{/pdfmark/cleartomark ld}
if
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix @@txt @gr @np stringwidth pop 3 -1 roll add exch m}
forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if $fil 1 eq
{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq{/@@txt/@Pf ld
@ftx}{$t $c $m $y $k $n $o @scc_5{show}{pop}ifelse}ifelse}ifelse}ifelse $sdf
{$dsf $dsa $dsp @ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF
$SCA $SCP @ss}if $T $C $M $Y $K $N $O @scc_5{{currentpoint 3 -1 roll(0)dup 3 -1
roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat stroke @gr @np
stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp
@ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup
@gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}
def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm
matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat
ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd
/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def
/_bithibyte 0 def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel9Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%BeginResource: font Swis721BT
%!FontType1-1.0: Swis721BT 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /Swis721BT def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 65 /A putdup 96 /grave putdup 66 /B putdup 67 /C putdup 43 /plus putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexec
A22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B1C0F881A068D7C32C5C642F2828829120487C40B425B5748CEFE9A2A19C3877345FF4DA996EAD7B27B793E
31F8A61AD56BD0D4FB890AB9E8BE3608B2CDEF71E0AD8DE8842B3C33A10DDE427F5EC754C8D172B9F01B33F2B847C490F52D547B46FA30C4BBCDA4848DD5CF94
DE2407A02C273C0E32EF0898BBA6B27C13F4D375DE6617A051344B067E65134DF97C5A54557F1421BB648F6D16972662022A297D733474E26DD1C8C656A908A6
617C20E1194AF1D4CBDF63C64B6D6220B4D672482E0B16000A363E45115B8D62F46905A647CE76C7F46B5D48352184E017F3AEBFF34A140C9F2305D2B653B92E
9C3B56AFDF07120EF5A70B8E5A8116FCC8266F498C8ABD0C3558697B0EDC3F6A9D7D7FBA81E51A5D0C2BF0C07C3B4D64CD0458B44DF360F4030028472DC3C2A9
54759FFB217AD62D2EDE2939B0ED857F834AF39965B2E3033FC376C078DC790418E002091227C028F7DFEADD43F766EDC99B724BA8E280187F8FF597EAB0A077
8EA95183D31203DFF201264F10EF2CDD22F8A6AD60DE3E085F419DEE7686E65E567393ED7D5EA71728B19E993416425F8777ACBD92D1AEE9EEC0E936DB632505
A04B2BBAC63545C763ED7B48D0BB8CEF08008AF1E517766D3BFB1E0B3537A4A7D098734007D378127BB7465DF8AAB7342EC514B5EF9CC5D09C9CAB50915A149A
6274D3DBECBEF7B194EB449C11ABB52C8D4489A5AABCD61E091C07A4A79D8B34FF0739F6BE6942125D2075904C12550F3C93821FA7EEF695EDB58F20EE0568F4
87466BD89B5D2BC32D74AE21A24A1E9D61A49AD9283BB5B27AE68DC89E59B2124B891697A8968F654D1D3000F70896F54A656A23648013A97D34BFD6A95F452A
435187CBF625A105D344AA23A93EDA692E8510AE2E9FE16840D667ABBFC31DAD1553E6B1D6D10BB330634AB56A25F15F1E1EF29C45FD9B820DA4AF48BB2CABC0
29DEF7E64248DF50280DC3430A72FA77C0C2A7CFE33634FE7DFD437E53F9372DB8001FF30D55AAC31104E65A3309CE
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
[ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 600 600 274 
321 300 769 549 845 683 155 336 336 500 833 274 525 274 301 549 
549 549 549 549 549 549 549 549 549 297 297 833 833 833 525 1000 
637 662 713 707 639 583 764 723 218 490 638 535 830 721 773 630 
773 664 646 571 709 611 904 605 603 598 354 301 354 580 590 669 
543 594 525 594 547 264 595 569 222 230 517 226 858 569 581 594 
594 332 496 281 569 481 728 479 507 481 500 500 500 833 600 600 
600 251 549 413 1000 500 500 500 1263 646 244 1154 600 600 600 600 
251 251 413 413 590 500 1000 500 833 496 244 929 600 600 603 549 
321 549 549 606 603 500 500 500 833 407 444 833 312 833 500 329 
833 362 362 500 562 500 274 500 362 436 444 858 858 859 525 600 
637 637 637 637 637 948 713 600 639 639 639 600 600 600 600 712 
721 600 773 773 773 773 833 773 600 709 709 709 603 630 539 600 
543 543 543 543 543 882 525 600 547 547 547 600 222 222 222 583 
569 600 581 581 581 581 833 581 600 569 569 569 507 593 507 ]
CorelDrawReencodeVect /_R67-Swis721BT /Swis721BT Z
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
109.44000 472.46343 238.82400 472.46457 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 1.51200 1.51200 0.00000 @w
/$fm 0 def
236.50469 472.46400 m
109.44000 472.46400 L
S
@j
0.00 0.00 0.00 1.00 K
0.00 0.00 0.00 1.00 k
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.51200 1.51200 0 @w
226.72800 469.36148 m
239.76142 472.43679 L
226.72800 475.56369 L
226.72800 469.36148 L
f
@J

@rax %Note: Object
238.82400 472.46400 294.98400 511.77600 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 1.51200 1.51200 0.00000 @w
/$fm 0 def
293.09216 510.45165 m
238.82400 472.46400 L
S
@j
0.00 0.00 0.00 1.00 K
0.00 0.00 0.00 1.00 k
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.50548 1.50548 0 @w
286.88882 502.33861 m
295.76409 512.28907 L
283.34750 507.39761 L
286.88882 502.33861 L
f
@J

@rax %Note: Object
295.05543 511.77600 295.05657 562.39200 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 1.51200 1.51200 0.00000 @w
/$fm 0 def
295.05600 560.07269 m
295.05600 511.77600 L
S
@j
0.00 0.00 0.00 1.00 K
0.00 0.00 0.00 1.00 k
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.51200 1.51200 0 @w
298.15852 550.29600 m
295.08321 563.32942 L
291.95631 550.29600 L
298.15852 550.29600 L
f
@J

@rax 305.95238 526.53600 316.15994 543.14674 @E
[0.00035433 0.00000000 0.00000000 0.00035433 305.99998881 526.53598074] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e
/_R67-Swis721BT 44803.00000 z
0 0 (A) @t
15 38083 (`) @t
T
@rax 184.60800 450.07200 194.72315 466.68274 @E
[0.00035433 0.00000000 0.00000000 0.00035433 184.60799325 450.07198354] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e
/_R67-Swis721BT 44803.00000 z
209 0 (B) @t
0 38083 (`) @t
T
@rax 274.50000 476.68252 285.21043 493.45200 @E
[0.00035433 0.00000000 0.00000000 0.00035433 274.49998996 476.99998255] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e
/_R67-Swis721BT 44803.00000 z
0 0 (C) @t
269 37635 (`) @t
T
@rax 166.55839 512.97959 223.94211 549.68882 @E
[0.00031981 0.00015253 -0.00015253 0.00031981 167.68799387 512.99998123] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e
/_R67-Swis721BT 44803.00000 z
0 0 (A) @t
32721 0 (+) @t
74216 0 (B) @t
108057 0 (+) @t
149552 0 (C) @t
T
@rax 160.99880 525.52800 219.53140 554.46236 @E
[0.00031981 0.00015253 -0.00015253 0.00031981 161.63999409 525.52798078] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e
/_R67-Swis721BT 44803.00000 z
0 0 (`) @t
76988 0 (`) @t
153976 0 (`) @t
T
@rax %Note: Object
108.30444 471.78737 138.71735 487.95534 @E
 0 O 0 @g
0.00 0.00 0.00 0.40 k
/$fm 0 def
136.43773 483.86863 m
138.09657 484.66431 139.07735 486.13181 138.60765 487.11402 c
138.13767 488.09622 136.38104 488.25014 134.72249 487.45446 c
133.06394 486.65877 132.08287 485.19156 132.55285 484.20935 c
133.02255 483.22687 134.77918 483.07294 136.43773 483.86863 c
@c
124.36498 478.06498 m
126.02381 478.86066 127.00460 480.32816 126.53490 481.31036 c
126.06491 482.29257 124.30828 482.44649 122.64973 481.65080 c
120.99118 480.85512 120.01011 479.38791 120.48009 478.40570 c
120.94980 477.42321 122.70643 477.26929 124.36498 478.06498 c
@c
112.29931 472.28825 m
113.95786 473.08394 114.93893 474.55115 114.46894 475.53364 c
113.99924 476.51584 112.24261 476.66976 110.58406 475.87408 c
108.92523 475.07839 107.94444 473.61090 108.41414 472.62869 c
108.88413 471.64649 110.64076 471.49257 112.29931 472.28825 c
@c
F

@rax %Note: Object
253.31499 541.35609 283.72762 557.52435 @E
 0 O 0 @g
0.00 0.00 0.00 0.40 k
/$fm 0 def
281.44828 553.43764 m
283.10683 554.23332 284.08791 555.70054 283.61792 556.68302 c
283.14794 557.66523 281.39159 557.81915 279.73276 557.02346 c
278.07420 556.22778 277.09342 554.76028 277.56312 553.77808 c
278.03310 552.79587 279.78973 552.64195 281.44828 553.43764 c
@c
269.37553 547.63398 m
271.03408 548.42967 272.01515 549.89688 271.54517 550.87937 c
271.07518 551.86157 269.31883 552.01550 267.66000 551.21981 c
266.00145 550.42413 265.02066 548.95691 265.49036 547.97443 c
265.96035 546.99222 267.71698 546.83830 269.37553 547.63398 c
@c
257.30986 541.85698 m
258.96841 542.65294 259.94920 544.12016 259.47950 545.10236 c
259.00951 546.08485 257.25288 546.23877 255.59433 545.44309 c
253.93578 544.64712 252.95471 543.17991 253.42469 542.19770 c
253.89468 541.21521 255.65102 541.06129 257.30986 541.85698 c
@c
F

@rax %Note: Object
180.85011 506.59115 211.26274 522.75912 @E
 0 O 0 @g
0.00 0.00 0.00 0.40 k
/$fm 0 def
208.98340 518.67241 m
210.64195 519.46809 211.62302 520.93559 211.15304 521.91780 c
210.68306 522.90000 208.92643 523.05392 207.26787 522.25824 c
205.60932 521.46255 204.62825 519.99534 205.09824 519.01285 c
205.56822 518.03065 207.32457 517.87672 208.98340 518.67241 c
@c
196.91065 512.86876 m
198.56920 513.66444 199.55027 515.13194 199.08028 516.11414 c
198.61030 517.09635 196.85395 517.25027 195.19512 516.45458 c
193.53657 515.65890 192.55550 514.19169 193.02548 513.20948 c
193.49546 512.22699 195.25181 512.07307 196.91065 512.86876 c
@c
184.84469 507.09203 m
186.50353 507.88772 187.48431 509.35493 187.01461 510.33742 c
186.54463 511.31962 184.78800 511.47354 183.12945 510.67786 c
181.47090 509.88217 180.48983 508.41468 180.95981 507.43247 c
181.42951 506.45027 183.18614 506.29635 184.84469 507.09203 c
@c
F

@rax %Note: Object
144.53717 489.16970 174.94980 505.33795 @E
 0 O 0 @g
0.00 0.00 0.00 0.40 k
/$fm 0 def
172.67017 501.25124 m
174.32901 502.04693 175.30980 503.51414 174.84009 504.49663 c
174.37011 505.47883 172.61348 505.63276 170.95493 504.83707 c
169.29638 504.04139 168.31531 502.57417 168.78529 501.59169 c
169.25528 500.60948 171.01162 500.45556 172.67017 501.25124 c
@c
160.59770 495.44759 m
162.25625 496.24328 163.23704 497.71049 162.76734 498.69298 c
162.29735 499.67518 160.54072 499.82910 158.88217 499.03342 c
157.22362 498.23773 156.24255 496.77052 156.71254 495.78803 c
157.18252 494.80583 158.93887 494.65191 160.59770 495.44759 c
@c
148.53175 489.67087 m
150.19030 490.46655 151.17137 491.93376 150.70139 492.91597 c
150.23169 493.89846 148.47506 494.05238 146.81650 493.25669 c
145.15795 492.46101 144.17688 490.99351 144.64687 490.01131 c
145.11657 489.02910 146.87320 488.87490 148.53175 489.67087 c
@c
F

@rax %Note: Object
217.08255 523.97348 247.49518 540.14173 @E
 0 O 0 @g
0.00 0.00 0.00 0.40 k
/$fm 0 def
245.21584 536.05502 m
246.87439 536.85071 247.85546 538.31792 247.38548 539.30041 c
246.91550 540.28261 245.15915 540.43654 243.50031 539.64085 c
241.84176 538.84517 240.86069 537.37795 241.33068 536.39546 c
241.80066 535.41326 243.55729 535.25934 245.21584 536.05502 c
@c
233.14309 530.25137 m
234.80164 531.04706 235.78271 532.51427 235.31272 533.49676 c
234.84274 534.47896 233.08639 534.63288 231.42756 533.83720 c
229.76901 533.04151 228.78794 531.57430 229.25792 530.59181 c
229.72791 529.60961 231.48454 529.45569 233.14309 530.25137 c
@c
221.07713 524.47465 m
222.73597 525.27033 223.71676 526.73754 223.24706 527.71975 c
222.77707 528.70224 221.02044 528.85616 219.36189 528.06047 c
217.70334 527.26479 216.72227 525.79729 217.19225 524.81509 c
217.66224 523.83288 219.41858 523.67868 221.07713 524.47465 c
@c
F

@rax %Note: Object
112.56265 473.29398 146.47946 492.32126 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
136.71723 488.45849 m
144.76876 492.32126 L
141.74135 490.86879 143.45206 487.29231 146.47946 488.74479 C
138.42794 484.88202 L
141.43918 486.32683 139.72847 489.90302 136.71723 488.45849 C
@c
124.63994 482.66447 m
132.69146 486.52696 L
129.66406 485.07477 131.37477 481.49830 134.40217 482.95077 C
126.35065 479.08800 L
129.36189 480.53254 127.65118 484.10901 124.63994 482.66447 C
@c
112.56265 476.87017 m
120.61417 480.73294 L
117.58677 479.28047 119.29748 475.70428 122.32488 477.15676 C
114.27335 473.29398 L
117.28460 474.73852 115.57389 478.31499 112.56265 476.87017 C
@c
F

@rax %Note: Object
257.57291 542.86271 291.48973 561.88998 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
281.72750 558.02721 m
289.77902 561.88998 L
286.75162 560.43780 288.46261 556.86132 291.48973 558.31380 C
283.43820 554.45102 L
286.44945 555.89556 284.73874 559.47203 281.72750 558.02721 C
@c
269.65020 552.23320 m
277.70173 556.09597 L
274.67433 554.64350 276.38504 551.06731 279.41244 552.51978 C
271.36091 548.65701 L
274.37216 550.10154 272.66145 553.67802 269.65020 552.23320 C
@c
257.57291 546.43918 m
265.62444 550.30195 L
262.59704 548.84948 264.30775 545.27329 267.33515 546.72548 C
259.28362 542.86271 L
262.29487 544.30753 260.58416 547.88372 257.57291 546.43918 C
@c
F

@rax %Note: Object
185.10803 508.09776 219.02485 527.12504 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
209.26261 523.26227 m
217.31414 527.12504 L
214.28674 525.67257 215.99745 522.09609 219.02485 523.54857 C
210.97332 519.68580 L
213.98457 521.13061 212.27386 524.70680 209.26261 523.26227 C
@c
197.18532 517.46797 m
205.23685 521.33074 L
202.20945 519.87855 203.92016 516.30208 206.94756 517.75455 C
198.89603 513.89178 L
201.90728 515.33631 200.19657 518.91279 197.18532 517.46797 C
@c
185.10803 511.67395 m
193.15956 515.53672 L
190.13216 514.08425 191.84287 510.50806 194.87027 511.96054 C
186.81874 508.09776 L
189.82998 509.54230 188.11928 513.11877 185.10803 511.67395 C
@c
F

@rax %Note: Object
148.79509 490.67660 182.71191 509.70387 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
172.94967 505.84110 m
181.00120 509.70387 L
177.97380 508.25140 179.68450 504.67493 182.71191 506.12740 C
174.66038 502.26463 L
177.67162 503.70945 175.96091 507.28564 172.94967 505.84110 C
@c
160.87238 500.04680 m
168.92391 503.90957 L
165.89650 502.45739 167.60721 498.88091 170.63461 500.33339 C
162.58309 496.47061 L
165.59433 497.91515 163.88362 501.49162 160.87238 500.04680 C
@c
148.79509 494.25279 m
156.84661 498.11556 L
153.81921 496.66309 155.52992 493.08690 158.55732 494.53909 C
150.50580 490.67660 L
153.51704 492.12113 151.80633 495.69732 148.79509 494.25279 C
@c
F

@rax %Note: Object
221.34047 525.48038 255.25729 544.50737 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
245.49506 540.64488 m
253.54658 544.50737 L
250.51918 543.05518 252.22989 539.47871 255.25729 540.93118 C
247.20576 537.06841 L
250.21701 538.51323 248.50630 542.08942 245.49506 540.64488 C
@c
233.41776 534.85058 m
241.46929 538.71335 L
238.44189 537.26088 240.15260 533.68469 243.18000 535.13717 C
235.12847 531.27439 L
238.13972 532.71893 236.42901 536.29540 233.41776 534.85058 C
@c
221.34047 529.05657 m
229.39200 532.91934 L
226.36460 531.46687 228.07531 527.89068 231.10271 529.34287 C
223.05118 525.48038 L
226.06243 526.92491 224.35172 530.50110 221.34047 529.05657 C
@c
F

@rax %Note: Object
275.15027 546.52961 295.27200 562.82400 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
295.27200 562.82400 m
288.60803 562.68312 282.47896 561.35934 275.15027 562.49575 C
279.53943 557.96230 282.45713 552.82507 283.46145 546.52961 C
286.76239 553.44274 291.33439 557.44611 295.27200 562.82400 C
@c
B

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel9Dict 9.0 0
%%+ font Swis721BT
%%EOF
