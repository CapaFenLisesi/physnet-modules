%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 506 423 608 557 
%%LanguageLevel: 1
%%Creator: CorelDRAW 9
%%Title: m5gr16.eps
%%CreationDate: Wed Jun 14 11:45:15 2000
%%For: Peter Signell
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW 9 Version 9.439
%Color profile:  Generic offset separations profile
%%BeginResource: procset wCorel9Dict 9.0 0
/wCorel9Dict 300 dict def wCorel9Dict begin
% Copyright (c)1992-1999 Corel Corporation
% All rights reserved.     v9.0 r0.5
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CurrentInkName_5 where{pop}{/CurrentInkName_5(Composite)def}
ifelse/$ink_5 where{pop}{/$ink_5 -1 def}ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0
def/$t 1 def/$n _ def/$o 0 def/$fil 0 def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def
/$T 1 def/$N _ def/$O 0 def/$PF false def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0
def/s1t 0 def/s1n _ def/$bkg false def/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op
false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm
matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/p{/$pm xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}
bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}ifelse}bd
/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp}bd
/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}bd
/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld/GetRgb
/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2 systemdict
/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def/SetHsb
systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get def
/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/setcustomcolor where{pop}{/setcustomcolor{exch aload pop SepMode_5 0 eq{pop
@tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll 5 rp 1
sub neg SetGry}ifelse}bd}ifelse/@scc_5{dup type/booleantype eq{setoverprint}{1
eq setoverprint}ifelse dup _ eq{pop setprocesscolor_5 pop}{findcmykcustomcolor
exch setcustomcolor}ifelse SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint
and not}ifelse}bd/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{
/ncolors xd/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop
pop exch pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd
/daqC xd pop pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}
ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub
{dup 3 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index
2 add get 255 div rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length 3 idiv getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4
mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add
get 255 div $dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop
$dat 3 1 roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}
image}ifelse}bd}ifelse/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5
/$ffpnt xd}bd/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/@sft{$tllx
$pxf add dup $tllx gt{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei
add}if/$ty xd}bd/@stb{pathbbox/$ury xd/$urx xd/$lly xd/$llx xd}bd/@ep{{cvx exec
}forall}bd/@tp{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei sub
$ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{/$in
false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0 $phei
rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3 index
sub Tl matrix currentmatrix/$ctm xd @ep pop pop pop pop}{pop pop}ifelse @rs}bd
/@th{@sft 0 1 $tly 1 sub{dup $psx mul $tx add{dup $llx gt{$pwid sub}{exit}
ifelse}loop exch $phei mul $ty exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1
roll add exch @tp pop}for pop pop}for}bd/@tv{@sft 0 1 $tlx 1 sub{dup $pwid mul
$tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}{exit}ifelse}loop 0 1
$tly 1 sub{$phei mul 3 copy sub @tp pop}for pop pop}for}bd/$fm 0 def/wfill{1
$fm eq{fill}{eofill}ifelse}bd/wclip{1 $fm eq{clip}{eoclip}ifelse}bd/@pf{@gs
$ctm setmatrix $pm concat @stb wclip @sv Bburx Bbury $pm itransform/$tury xd
/$turx xd Bbllx Bblly $pm itransform/$tlly xd/$tllx xd newpath $tllx $tlly m
$tllx $tury l $turx $tury l $turx $tlly l $tllx $tlly m @cp pathbbox @rs/$tury
xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx sub def/$hei $tury $tlly sub def
@gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{$t $c $m $y $k $n $o @scc_5{
SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei scale <00> 8 1 false[8 0 0 1 0
0]{}imagemask}{/$bkg true def}ifelse}if}ifelse @gr $wid 0 gt $hei 0 gt and{$pn
cvlit load aload pop/$pd xd 3 -1 roll sub/$phei xd exch sub/$pwid xd $wid $pwid
div ceiling 1 add/$tlx xd $hei $phei div ceiling 1 add/$tly xd $psx 0 eq{@tv}{
@th}ifelse}if @gr @np/$bkg false def}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{@pf}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$t $c $m $y $k $n $o @scc_5{wfill}
{@np}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp
F}bd/S{matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M
$Y $K $N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}
{@np}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}
bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true
def}{@gs $t $c $m $y $k $n $o @scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd
/$pyf xd/$pxf xd/$pn xd}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd
}bd/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/tcc{@cc}def/@i{@sm @gs @ii 6 index 1 ne
{/$frg true def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg
false def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd
/$lly xd/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi
string def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub
$ury $lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts
1 eq{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load
$bts 1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}
ifelse}ifelse}ifelse}bd systemdict/pdfmark known not{/pdfmark/cleartomark ld}
if
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix @@txt @gr @np stringwidth pop 3 -1 roll add exch m}
forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if $fil 1 eq
{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq{/@@txt/@Pf ld
@ftx}{$t $c $m $y $k $n $o @scc_5{show}{pop}ifelse}ifelse}ifelse}ifelse $sdf
{$dsf $dsa $dsp @ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF
$SCA $SCP @ss}if $T $C $M $Y $K $N $O @scc_5{{currentpoint 3 -1 roll(0)dup 3 -1
roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat stroke @gr @np
stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp
@ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup
@gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}
def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm
matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat
ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd
/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def
/_bithibyte 0 def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel9Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%BeginResource: font Swis721LtCnBT
%!FontType1-1.0: Swis721LtCnBT 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /Swis721LtCnBT def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 63 /question putdup 108 /l putdup 98 /b putdup 52 /four putdup 53 /five putdup 176 /degree putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexec
A22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B13CDD7F7B517C71B7F516E328F8121312A93F755BF9D6D4561B88AE31B66D8D58E8C76A4C78DFA38506454
178B2B3B7E749D993FBF5157F11924CD904CA997B3C6CA085F03494BD777D170DB77CE41A5E6C0A20844BF63152A176717008107C856566837B53F1C1739D94B
20D70C39B8D102FB777378651DA414417FC7FD4DA81EEB26BB7257ACDF81A570F11176F6944FC73393BDD7CB3A05AB2EB0200CA2DE11CD9AC4BAF698F729563B
FB868400F093F741DD50CAE8FBD6882774C07EE68B7B49E53B196C37FB7F4927F11AF62771DC9DF93A6B98007C6866847928E17C50CCA9388812466EC6DF0146
776AB1B849BB4BFB448DB3299CB15B92D30A31D25E93722A980919993FAFECA8844951931280080BA57598AF0D7FA4CEF81286E903C264F9949BECE632BB702E
471EE719013F2B7AF5E414402660D13AA1964AFDAD1A4E51D591CB497A61CD06CE1311E329B4AB4DBB1774731BEE1A3AEE6AA583B713B8AD3AA8B1FF0EBA6ECD
A97A1581032DC42C7F0A21B29CF4FC8CCDA5C95F47786991055F1CDC8EB6E06CB73FDE1037780D12E6BD97B5373D9ED407E215CD6758E2CEB960276DA7C99A1A
9F1687728416264E355EA7AA9C59E8A2154ECEECDE927AE861F52F17A7A26B6D56B77B823CDAA5DBD5EC414A7B72B4E566644C50DD4313F00484A394C3D49BD9
C55063D13A4391B79340CB5721F9AA89ADD5E73E6A3186BFC0EFCFBB5FB71A027BFC4B8C9FC91BB3480514FE4D8E239EEB82DD4AC442126BC186693EF5A8EB83
9FF236CCB6DEC6E8B14071EAA474D2AA624C3F6F6ACD4FCF58231291022482949A93206305364143325DB9D7C309143E81EC9FEEAF5F6AEFF340793ADEAE7297
535BBCACC1AC62FB044B0FEF5B603686279931B4117A586FDA5315AD968956BC559B444A9C1CDD06897BEBD421DCA883C437352BD3A632F81C2D34F5158BBF78
2EA3F3AF0A97027FB0ACA7C10BC9CD09FD723BC890D831DC5E5F96156F46399D5799A53A7DF9B72C57B83030D9CCD8D507217D2B4765D3319C35ACD87D9219A5
28766F50FE19C4EC33680D79606D46AF19B6566D84212E3E48B861439F4904ADC2D15BFF321ED8D42C37D314A30735EE5023339E829B01405D926843F599C4CB
89BBD366FFDF12F9DB15D89B64C8898E3DB30BC69699DAA34673668507FD8473D8A3A368211B0F4028BEE7713BB481027E7893A81B11964CDE9EAF2224BBC63C
999F517F075B8370798CDDFE1C686E380088F46C4D719A7EE57DDD173E65809B8092A48006E7ED1194BA8E3B5F9818683EA2F04EE0AFC3AE4DFA747A1706F7FB
6FCB5378D992B84987BE794226708AE400DFA9485443F9BC27E2D3A27591DB03CFE808F8
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
[ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 600 600 234 
229 579 429 467 669 597 199 306 306 468 562 234 513 234 285 467 
467 467 467 467 467 467 467 467 467 234 234 833 455 833 396 1000 
505 509 542 553 453 441 551 559 207 391 491 428 714 554 550 494 
550 509 509 428 547 481 727 462 459 426 306 285 306 407 466 579 
396 455 424 455 418 250 455 441 221 271 376 229 697 441 447 455 
455 295 394 295 441 380 564 356 395 340 500 81 434 833 600 600 
600 234 467 387 1000 468 468 500 981 509 259 771 600 600 600 600 
234 234 387 387 590 500 1000 500 833 374 213 693 600 600 459 467 
229 467 467 606 467 500 468 500 833 297 455 833 560 833 500 322 
455 513 376 500 579 454 234 500 376 376 455 376 376 376 396 376 
376 376 376 376 510 734 542 600 453 537 453 334 367 397 600 553 
554 600 550 550 550 644 562 550 600 547 547 547 773 494 576 523 
396 396 396 396 396 644 424 600 600 600 600 600 221 221 221 431 
441 600 447 447 447 447 562 447 600 441 441 441 395 455 395 ]
CorelDrawReencodeVect /_R68-Swis721LtCnBT /Swis721LtCnBT Z
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
523.15200 427.32000 553.32113 462.96000 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
549.43200 447.12000 m
549.14400 447.48000 548.64000 447.55200 548.28000 447.19200 c
547.99200 446.83200 547.77600 446.18400 548.13600 445.75200 c
548.56800 445.17600 549.28800 445.03200 550.08000 445.39200 C
536.54400 431.64000 m
536.54400 431.49600 535.32000 427.75200 534.88800 427.32000 C
529.63200 444.81600 m
530.06400 443.80800 529.99200 442.44000 529.05600 441.79200 c
528.40800 441.36000 526.68000 441.57600 526.39200 442.15200 C
526.39200 442.15200 523.44000 447.55200 523.44000 447.55200 c
523.15200 448.99200 522.93600 450.57600 523.51200 452.01600 c
523.94400 453.09600 524.80800 453.74400 525.88800 454.03200 c
527.61600 454.53600 529.12800 453.31200 530.35200 452.08800 C
527.54400 450.72000 m
527.11200 451.58400 526.53600 452.59200 525.16800 451.80000 c
523.80000 451.00800 526.17600 442.36800 528.19200 443.37600 c
529.48800 444.02400 528.04800 445.32000 528.04800 445.82400 C
528.48000 438.48000 m
536.68800 430.05600 537.91200 431.35200 539.20800 431.13600 c
541.51200 430.92000 544.53600 431.78400 547.12800 432.57600 c
549.36000 433.22400 549.36000 434.88000 548.35200 436.89600 C
549.14400 437.83200 L
550.00800 438.91200 L
550.15200 440.28000 L
549.50400 440.64000 L
550.15200 441.28800 L
550.51200 441.86400 L
550.51200 442.22400 550.36800 443.30400 550.22400 443.59200 c
549.93600 444.02400 549.50400 444.96000 550.08000 445.39200 c
550.94400 445.96800 552.45600 445.68000 552.96000 446.32800 c
554.25600 447.98400 551.88000 449.78400 550.80000 451.51200 c
550.15200 452.52000 550.15200 453.74400 550.29600 454.89600 c
550.36800 455.54400 550.08000 456.19200 550.44000 456.84000 c
550.65600 457.20000 550.72800 457.63200 550.72800 457.99200 c
550.72800 459.64800 550.87200 461.30400 550.36800 462.96000 C
549.50400 440.64000 m
548.06400 440.28000 L
546.91200 439.56000 L
547.20000 440.42400 L
547.84800 441.07200 L
548.28000 441.28800 L
550.15200 441.79200 L
550.51200 441.79200 L
550.00800 439.41600 m
549.21600 439.63200 L
548.20800 440.35200 L
547.56000 454.24800 m
546.69600 453.81600 545.90400 453.60000 545.11200 453.02400 C
545.25600 453.02400 547.27200 452.01600 547.41600 452.01600 C
547.05600 455.04000 m
548.28000 455.61600 L
547.05600 454.96800 547.92000 452.37600 546.76800 452.37600 C
S

@rax %Note: Object
506.80800 423.00000 551.86668 480.70800 @E
0 J 0 j [1 1 4 2 1 2 2 1 1 2 ] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.50400 0.50400 0.00000 @w
/$fm 0 def
550.36800 462.96000 m
550.29600 463.32000 551.01600 463.60800 551.16000 464.11200 c
551.88000 466.34400 552.09600 468.72000 551.59200 471.09600 c
551.44800 472.46400 549.07200 474.76800 548.28000 475.56000 c
546.62400 477.00000 544.60800 477.14400 542.73600 478.44000 c
541.22400 479.30400 539.56800 480.24000 537.76800 480.45600 c
536.04000 480.74400 534.24000 480.81600 532.51200 480.52800 c
531.00000 480.24000 529.70400 479.66400 528.33600 479.16000 c
526.75200 478.65600 525.09600 478.87200 523.44000 478.80000 c
520.05600 478.65600 516.74400 477.79200 514.29600 475.34400 c
513.14400 474.04800 511.99200 472.60800 510.98400 471.16800 c
509.97600 469.65600 509.54400 467.78400 509.25600 466.05600 c
507.24000 461.37600 506.44800 455.83200 508.46400 451.00800 c
509.47200 448.70400 506.95200 446.32800 507.31200 443.80800 c
507.45600 442.44000 506.80800 441.28800 506.80800 439.99200 c
506.80800 436.32000 507.16800 432.57600 507.24000 428.83200 c
507.24000 428.61600 507.81600 427.46400 507.81600 427.24800 c
507.74400 425.44800 508.24800 425.59200 508.89600 423.72000 C
508.96800 424.65600 510.33600 428.54400 510.33600 429.33600 c
510.26400 427.96800 509.83200 424.65600 510.04800 423.00000 C
510.33600 423.21600 512.64000 427.68000 513.43200 428.76000 C
513.50400 428.18400 512.92800 426.38400 512.85600 425.80800 C
512.78400 425.66400 515.01600 428.90400 515.01600 428.90400 c
515.37600 428.68800 513.79200 424.94400 513.93600 424.58400 c
514.15200 424.15200 517.32000 427.68000 517.96800 428.18400 c
518.83200 428.90400 520.27200 430.41600 521.06400 431.20800 C
521.06400 430.63200 520.77600 429.69600 521.13600 429.91200 c
522.79200 431.20800 524.44800 432.43200 525.38400 434.30400 c
526.17600 435.96000 526.96800 438.33600 526.82400 440.42400 C
530.35200 452.08800 m
531.28800 451.29600 531.50400 450.00000 531.72000 448.77600 C
532.22400 449.35200 532.00800 450.21600 532.58400 450.79200 C
533.08800 449.85600 533.37600 448.84800 533.44800 447.76800 C
533.59200 448.70400 534.02400 449.49600 534.45600 450.36000 C
534.38400 449.85600 534.45600 449.42400 534.67200 449.06400 C
535.32000 451.15200 535.46400 453.38400 536.04000 455.54400 c
536.61600 457.84800 538.99200 458.20800 540.79200 459.28800 C
544.46400 459.64800 544.03200 462.02400 545.47200 464.61600 C
545.11200 463.39200 544.75200 461.23200 544.75200 459.93600 C
544.75200 459.93600 548.28000 465.84000 548.28000 466.56000 C
548.28000 464.83200 547.41600 462.88800 547.56000 461.23200 C
548.64000 463.10400 549.50400 464.97600 549.28800 467.28000 C
549.21600 466.27200 549.86400 463.32000 549.72000 461.52000 C
529.70400 465.91200 m
525.74400 465.91200 521.49600 461.88000 519.76800 458.06400 C
529.99200 469.15200 m
525.31200 469.80000 520.63200 466.84800 519.48000 462.16800 C
531.57600 479.37600 m
533.66400 479.37600 539.49600 477.64800 539.49600 471.60000 C
529.77600 475.20000 m
534.74400 474.76800 534.74400 468.86400 534.74400 465.12000 C
529.12800 477.93600 m
532.44000 477.93600 536.18400 476.20800 537.48000 472.82400 c
537.91200 471.88800 537.69600 470.44800 537.69600 469.44000 C
528.76800 470.37600 m
532.72800 469.51200 533.59200 465.76800 533.52000 462.67200 C
528.62400 475.77600 m
524.80800 475.77600 521.56800 475.48800 518.40000 472.82400 C
518.32800 476.85600 m
512.56800 473.25600 508.46400 467.71200 509.32800 460.65600 c
509.32800 460.51200 509.54400 460.80000 509.54400 460.94400 C
519.55200 472.53600 m
516.60000 470.95200 513.14400 465.98400 513.07200 461.52000 C
517.75200 473.25600 m
515.08800 472.24800 512.20800 467.42400 511.41600 464.76000 c
511.05600 463.46400 510.98400 460.08000 511.70400 458.92800 C
524.16000 472.39200 m
520.99200 472.75200 515.73600 466.56000 514.51200 460.44000 C
520.05600 475.99200 m
516.88800 474.84000 513.50400 472.46400 512.42400 469.29600 C
535.82400 466.05600 m
534.96000 462.52800 532.36800 460.94400 529.84800 458.42400 C
535.24800 472.39200 m
536.90400 469.87200 539.92800 466.99200 538.84800 463.60800 c
538.48800 462.16800 536.90400 461.52000 535.96800 460.51200 C
538.27200 478.36800 m
541.44000 476.20800 542.88000 473.54400 542.88000 469.80000 C
542.95200 476.78400 m
545.54400 474.48000 549.14400 471.45600 549.14400 467.28000 C
540.36000 478.87200 m
544.96800 475.70400 545.32800 470.37600 544.75200 465.19200 C
544.32000 469.44000 m
542.88000 458.64000 541.22400 463.75200 536.54400 458.28000 C
541.00800 474.26400 m
541.51200 470.30400 544.17600 466.84800 540.28800 462.52800 C
548.85600 472.39200 m
550.80000 469.72800 551.80800 467.20800 550.80000 464.47200 C
546.12000 472.96800 m
547.56000 471.02400 547.41600 468.72000 547.05600 466.56000 C
550.00800 443.37600 m
549.50400 442.00800 L
548.56800 441.79200 m
549.43200 443.95200 L
547.56000 441.79200 m
548.28000 443.52000 L
546.48000 441.00000 m
546.98400 442.94400 L
545.47200 440.49600 m
545.76000 442.65600 L
544.60800 440.20800 m
544.82400 441.93600 L
547.63200 456.91200 m
546.12000 456.69600 L
546.98400 456.48000 m
544.10400 455.61600 L
549.21600 456.12000 m
547.92000 456.84000 L
549.21600 455.83200 m
547.34400 456.55200 L
522.14400 437.54400 m
521.64000 435.52800 520.48800 433.22400 519.48000 431.42400 c
519.26400 430.99200 516.81600 427.32000 516.31200 427.46400 C
514.80000 447.26400 m
513.50400 441.93600 513.07200 436.17600 513.28800 429.76800 C
512.28000 444.31200 m
510.12000 438.40800 512.06400 432.43200 511.05600 427.46400 C
522.72000 449.28000 m
521.78400 446.97600 520.70400 444.60000 519.48000 442.36800 C
522.14400 456.91200 m
519.33600 453.74400 519.84000 444.60000 517.82400 438.98400 C
523.15200 438.84000 m
523.08000 436.96800 522.86400 434.37600 522.28800 432.57600 C
521.92800 441.93600 m
520.70400 438.69600 518.97600 435.88800 517.39200 432.86400 c
516.96000 432.14400 516.67200 431.13600 516.60000 430.34400 C
510.84000 448.99200 m
509.54400 445.75200 508.60800 432.86400 508.96800 429.40800 C
513.64800 452.52000 m
514.00800 449.20800 511.27200 446.18400 510.69600 442.94400 C
518.11200 449.35200 m
516.81600 445.96800 515.08800 439.84800 514.58400 433.72800 C
520.12800 442.94400 m
519.84000 439.05600 517.10400 437.54400 515.16000 428.68800 C
529.48800 471.96000 m
524.01600 471.38400 520.12800 468.14400 518.68800 462.52800 c
518.32800 461.08800 518.68800 458.92800 518.68800 457.41600 C
521.35200 468.72000 m
517.24800 467.42400 515.95200 458.56800 516.52800 456.40800 C
532.36800 457.20000 m
531.86400 455.54400 530.42400 451.87200 531.57600 450.72000 C
535.03200 456.26400 m
534.74400 453.74400 533.30400 451.65600 533.30400 448.99200 C
538.34400 461.30400 m
536.25600 459.79200 533.95200 458.42400 533.01600 455.97600 c
532.94400 455.68800 533.08800 455.68800 533.23200 455.97600 C
537.40800 466.84800 m
536.83200 461.52000 532.58400 461.08800 529.84800 456.55200 C
S

@rax %Note: Object
584.92800 542.08800 594.00000 551.16000 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 1.00800 1.00800 0.00000 @w
/$fm 0 def
589.46400 551.16000 m
591.91200 551.16000 594.00000 549.14400 594.00000 546.62400 c
594.00000 544.10400 591.91200 542.08800 589.46400 542.08800 c
587.01600 542.08800 584.92800 544.10400 584.92800 546.62400 c
584.92800 549.14400 587.01600 551.16000 589.46400 551.16000 c
@c
S

@rax %Note: Object
522.00000 542.08800 531.07200 551.16000 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 1.00800 1.00800 0.00000 @w
/$fm 0 def
526.53600 551.16000 m
528.98400 551.16000 531.07200 549.14400 531.07200 546.62400 c
531.07200 544.10400 528.98400 542.08800 526.53600 542.08800 c
524.08800 542.08800 522.00000 544.10400 522.00000 546.62400 c
522.00000 549.14400 524.08800 551.16000 526.53600 551.16000 c
@c
S

@rax %Note: Object
521.92800 483.69600 531.00000 492.76800 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 1.00800 1.00800 0.00000 @w
/$fm 0 def
526.46400 492.76800 m
528.91200 492.76800 531.00000 490.75200 531.00000 488.23200 c
531.00000 485.71200 528.91200 483.69600 526.46400 483.69600 c
524.01600 483.69600 521.92800 485.71200 521.92800 488.23200 c
521.92800 490.75200 524.01600 492.76800 526.46400 492.76800 c
@c
S

@rax %Note: Object
522.00000 485.71200 594.00000 548.49600 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.50400 0.50400 0.00000 @w
/$fm 0 def
594.00000 546.69600 m
594.00000 510.69600 L
530.28000 485.71200 m
585.36000 548.49600 L
522.00000 546.69600 m
522.00000 488.16000 L
531.00000 546.69600 m
526.46400 492.69600 L
S

@rax %Note: Object
571.60800 483.69600 607.62217 510.69600 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.50400 0.50400 0.00000 @w
/$fm 0 def
571.60800 510.69600 m
607.62217 510.69600 L
607.62217 483.69600 L
571.60800 483.69600 L
571.60800 510.69600 L
@c
S

@rax 583.16740 492.54435 595.57181 500.29427 @E
[0.00028346 0.00000000 0.00000000 0.00028346 589.60797843 492.69598198] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e
/_R68-Swis721LtCnBT 35278.00000 z
-22721 0 (?) @t
-2647 0 (l) @t
6669 0 (b) @t
T
@rax %Note: Object
525.38400 547.30800 527.65200 556.30800 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
525.38400 556.30800 m
527.65200 556.30800 L
527.65200 547.30800 L
525.38400 547.30800 L
525.38400 556.30800 L
@c
F

@rax %Note: Object
525.38400 545.60693 527.65200 556.30800 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.50400 0.50400 0.00000 @w
/$fm 0 def
527.65200 556.30800 m
527.65200 547.30800 L
527.65200 545.04000 525.38400 545.04000 525.38400 547.30800 C
525.38400 556.30800 L
S

@rax %Note: Object
588.38400 547.30800 590.65200 556.30800 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
588.38400 556.30800 m
590.65200 556.30800 L
590.65200 547.30800 L
588.38400 547.30800 L
588.38400 556.30800 L
@c
F

@rax %Note: Object
588.38400 545.60693 590.65200 556.30800 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.50400 0.50400 0.00000 @w
/$fm 0 def
590.65200 556.30800 m
590.65200 547.30800 L
590.65200 545.04000 588.38400 545.04000 588.38400 547.30800 C
588.38400 556.30800 L
S

@rax %Note: Object
535.53600 510.84000 551.52000 519.69600 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
551.52000 510.84000 m
547.92000 515.23200 541.44000 518.97600 535.53600 519.69600 C
S
@j
0.00 0.00 0.00 1.00 K
0.00 0.00 0.00 1.00 k
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.00800 1.00800 0 @w
547.97329 511.98661 m
549.16016 511.60394 550.41817 511.38907 551.52624 510.83235 C
551.19770 512.02800 551.23398 513.30387 551.09169 514.54261 C
551.03584 513.54539 551.09962 511.94750 550.80794 511.70854 C
550.51483 511.46844 548.96230 511.84573 547.97329 511.98661 C
f
@J
@j
0.00 0.00 0.00 1.00 K
0.00 0.00 0.00 1.00 k
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.00800 1.00800 0 @w
538.40381 517.31518 m
537.44513 518.11257 536.58964 519.05962 535.52608 519.69713 C
536.71181 520.06025 537.76970 520.77402 538.89194 521.31770 C
538.07981 520.73631 536.69650 519.93411 536.65087 519.55994 C
536.60494 519.18378 537.75524 518.07458 538.40381 517.31518 C
f
@J

@rax 540.00000 519.54435 553.10967 527.48929 @E
[0.00028346 0.00000000 0.00000000 0.00028346 539.99998025 519.69598099] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e
/_R68-Swis721LtCnBT 35278.00000 z
0 0 (4) @t
17706 0 (5) @t
35412 0 (\260) @t
T
@rax %Note: Object
535.53543 491.83200 535.53657 542.16000 @E
0 J 0 j [2 5 ] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.50400 0.50400 0.00000 @w
/$fm 0 def
535.53600 542.16000 m
535.53600 491.83200 L
S

@rax %Note: Object
507.19975 449.92800 526.17600 463.75200 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.50400 0.50400 0.00000 @w
/$fm 0 def
526.17600 458.92800 m
526.17600 457.56000 L
514.08000 451.44000 508.60800 449.92800 508.60800 449.92800 c
507.60000 452.16000 506.44800 458.28000 507.81600 463.75200 C
513.07200 460.94400 521.85600 459.00000 526.17600 458.92800 C
@c
B

@rax %Note: Object
526.24800 430.92992 549.57600 458.92800 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.50400 0.50400 0.00000 @w
/$fm 0 def
526.24800 457.63200 m
526.24800 458.92800 L
532.00800 453.02400 540.21600 443.01600 548.56800 437.25600 c
550.15200 436.10400 549.79200 433.65600 548.20800 432.57600 c
545.83200 430.92000 539.78400 430.34400 538.99200 431.64000 c
534.16800 438.98400 530.71200 450.21600 526.24800 457.63200 C
@c
B

@rax %Note: Object
525.74400 458.20800 527.25600 492.19200 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
525.74400 492.12000 m
525.74400 492.12000 527.25600 492.19200 527.25600 492.19200 c
526.75200 458.28000 L
525.81600 458.20800 L
525.74400 492.12000 l
@c
B

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel9Dict 9.0 0
%%+ font Swis721LtCnBT
%%EOF
