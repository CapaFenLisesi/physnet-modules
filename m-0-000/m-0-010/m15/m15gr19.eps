%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 111 186 208 263 
%%Creator: CorelDRAW 8
%%Title: E:\modules\m-0-000\m-0-010\m15\m15gr19.eps
%%CreationDate: Wed May 08 10:10:17 2002
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Color profile: PROFILES.CCM - Generic CMYK printer profile
%%BeginResource: procset wCorel8Dict 8.0 0
/wCorel8Dict 300 dict def wCorel8Dict begin
% Copyright (c)1992-97 Corel Corporation
% All rights reserved.     v8.0 r0.7
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/setscreen{pop pop pop}bd/@ss{2 index
0 eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SepMode_5 where{pop}{/SepMode_5 0 def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def
/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict/Corel30Dict get
exec}if systemdict/CorelLexDict known{1 systemdict/CorelLexDict get exec}if}bd
/@EndSysCorelDict{systemdict/Corel30Dict known{end}if/EndCorelLexDict where
{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/p{/$pm xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}
bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}ifelse}bd
/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp}bd
/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}bd
/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld/GetRgb
/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2 systemdict
/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def/SetHsb
systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get def
/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/SetCmyk_5/setcmykcolor ld}{/SetCmyk_5{
cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk/currentcmykcolor
ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{
/$op xd}bd}ifelse/currentoverprint where{pop}{/currentoverprint{$op}bd}ifelse
/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/@trp{exch pop 5 1 roll @tc_5}bd/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0
4 $ink_5 sub index exch pop 5 1 roll pop pop pop pop SepsColor true eq{$ink_5 3
gt{1 sub neg SetGry}{0 0 0 4 $ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}
ifelse}ifelse}bd/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array
astore}bd}ifelse/setcustomcolor where{pop}{/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}
ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse/@scc_5{dup type
/booleantype eq{setoverprint}{1 eq setoverprint}ifelse dup _ eq{pop
setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse SepMode_5
0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd pop/dataaq xd{dataaq
ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index
get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g
255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}bd
}ifelse/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{0 0 0 0}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE systemdict
/image get def/image{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}
{dup type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent
get 8 eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray
eq and{CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5
(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}
ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/@sft
{$tllx $pxf add dup $tllx gt{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt
{$phei add}if/$ty xd}bd/@stb{pathbbox/$ury xd/$urx xd/$lly xd/$llx xd}bd/@ep{{
cvx exec}forall}bd/@tp{@sv/$in true def 2 copy dup $lly le{/$in false def}if
$phei sub $ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add
$llx le{/$in false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg
0 rl 0 $phei rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1
roll 3 index sub Tl matrix currentmatrix/$ctm xd @ep pop pop pop pop}{pop pop
}ifelse @rs}bd/@th{@sft 0 1 $tly 1 sub{dup $psx mul $tx add{dup $llx gt{$pwid
sub}{exit}ifelse}loop exch $phei mul $ty exch sub 0 1 $tlx 1 sub{$pwid mul 3
copy 3 -1 roll add exch @tp pop}for pop pop}for}bd/@tv{@sft 0 1 $tlx 1 sub{dup
$pwid mul $tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}{exit}
ifelse}loop 0 1 $tly 1 sub{$phei mul 3 copy sub @tp pop}for pop pop}for}bd/$fm
0 def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/wclip{1 $fm eq{clip}{eoclip}ifelse
}bd/@pf{@gs $ctm setmatrix $pm concat @stb wclip @sv Bburx Bbury $pm itransform
/$tury xd/$turx xd Bbllx Bblly $pm itransform/$tlly xd/$tllx xd newpath $tllx
$tlly m $tllx $tury l $turx $tury l $turx $tlly l $tllx $tlly m @cp pathbbox
@rs/$tury xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx sub def/$hei $tury
$tlly sub def @gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{$t $c $m $y $k $n $o
@scc_5{SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei scale <00> 8 1 false[8
0 0 1 0 0]{}imagemask}{/$bkg true def}ifelse}if}ifelse @gr $wid 0 gt $hei 0 gt
and{$pn cvlit load aload pop/$pd xd 3 -1 roll sub/$phei xd exch sub/$pwid xd
$wid $pwid div ceiling 1 add/$tlx xd $hei $phei div ceiling 1 add/$tly xd $psx
0 eq{@tv}{@th}ifelse}if @gr @np/$bkg false def}bd/@Pf{@sv SepMode_5 0 eq $Psc 0
ne or $ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm
setmatrix 72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch
itransform ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch
itransform floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec
}{1 SetGry wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp
@ss}if $fil 1 eq{@pf}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$t $c $m $y $k $n $o @scc_5
{wfill}{@np}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}
bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if
$T $C $M $Y $K $N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}
{@np}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}
bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true
def}{@gs $t $c $m $y $k $n $o @scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd
/$pyf xd/$pxf xd/$pn xd}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd
}bd/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/tcc{@cc}def/@i{@sm @gs @ii 6 index 1 ne
{/$frg true def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg
false def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd
/$lly xd/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi
string def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub
$ury $lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts
1 eq{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load
$bts 1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub scale $wid
$hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/@cc load false $ncl
ColorImage $SDF{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}
ifelse}ifelse}ifelse}bd systemdict/pdfmark known not{/pdfmark/cleartomark ld}
if
/$fst 128 def/$pad 0 def/$rox 0 def/$roy 0 def/$fmp 50 def/@dlt_hsb{$fco nff ge
{/$fco nff 1 sub def}if sub neg 2 div dup $fco div/kdb xd nff $fco sub div
/kdb2 xd sub neg 2 div dup $fco div/kds xd nff $fco sub div/kds2 xd sub neg dup
0 eq{pop $frb 2 eq{.99}{-.99}ifelse}if dup $frb 2 eq exch 0 lt and{1 add}if dup
$frb 1 eq exch 0 gt and{1 sub}if 2 div dup $fco div/kdh xd nff $fco sub div
/kdh2 xd}bd/@dlt_cmyk{$fmp 50 eq{sub neg nff dup 1 gt{1 sub}if div/$dk xd sub
neg nff dup 1 gt{1 sub}if div/$dy xd sub neg nff dup 1 gt{1 sub}if div/$dm xd
sub neg nff dup 1 gt{1 sub}if div/$dc xd sub neg nff dup 1 gt{1 sub}if div/$dt
xd}{$fco nff ge{/$fco nff 1 sub def}if sub neg 2 div dup $fco div/$dk xd nff
$fco sub div/$dk2 xd sub neg 2 div dup $fco div/$dy xd nff $fco sub div/$dy2 xd
sub neg 2 div dup $fco div/$dm xd nff $fco sub div/$dm2 xd sub neg 2 div dup
$fco div/$dc xd nff $fco sub div/$dc2 xd sub neg 2 div dup $fco div/$dt xd nff
$fco sub div/$dt2 xd}ifelse}bd/@dlt{$fse $fss sub dup/nff xd $fmp mul $fmp add
100 div round cvi dup 0 le{pop 1}if/$fco xd/$fi 0 def $frb dup 1 eq exch 2 eq
or{$frt dup $frc $frm $fry $frk @tc_5 4 copy cmyk2rgb rgb2hsb 3 copy/myb xd
/mys xd/myh xd $tot $toc $tom $toy $tok @tc_5 cmyk2rgb rgb2hsb 3 1 roll 4 1
roll 5 1 roll @dlt_hsb}{$frt dup $frc $frm $fry $frk @tc_5 5 copy $tot dup $toc
$tom $toy $tok @tc_5 5 1 roll 6 1 roll 7 1 roll 8 1 roll 9 1 roll @dlt_cmyk}
ifelse}bd/@ffnxt{/$fi $fi 1 add def $frb dup 1 eq exch 2 eq or{pop pop pop pop
myh mys myb $fi $fco lt{kdb add 3 1 roll kds add 3 1 roll kdh add 3 1 roll}{
kdb2 add 3 1 roll kds2 add 3 1 roll kdh2 add 3 1 roll}ifelse 3 copy/myb xd/mys
xd/myh xd hsb2rgb rgb2cmyk}{$fi $fco lt $fmp 50 eq or{$dk add 5 1 roll $dy add
5 1 roll $dm add 5 1 roll $dc add 5 1 roll $dt add 5 1 roll}{$dk2 add 5 1 roll
$dy2 add 5 1 roll $dm2 add 5 1 roll $dc2 add 5 1 roll $dt2 add 5 1 roll}ifelse
}ifelse}bd/ffcol{5 copy $fsit 0 eq{setcmykcolor pop}{SepMode_5 0 ne{$frn
findcmykcustomcolor exch setcustomcolor}{pop pop pop pop $frc $frm $fry $frk
$frn findcmykcustomcolor exch setcustomcolor}ifelse}ifelse}bd/@ftl{1 index 4
index sub dup $pad mul dup/$pdw xd 2 mul sub $fst div/$wid xd 2 index sub/$hei
xd pop Tl @dlt $fss 0 eq{ffcol n 0 0 m 0 $hei l $pdw $hei l $pdw 0 l @cp $ffpnt
{fill}{@np}ifelse}if $fss $wid mul $pdw add 0 Tl nff{ffcol n 0 0 m 0 $hei l
$wid $hei l $wid 0 l @cp $ffpnt{fill}{@np}ifelse $wid 0 Tl @ffnxt}repeat 5 rp
$tot dup $toc $tom $toy $tok @tc_5 ffcol n 0 0 m 0 $hei l $pdw $hei l $pdw 0 l
@cp $ffpnt{fill}{@np}ifelse 5 rp}bd/@ftrs{1 index 4 index sub dup $rox mul
/$row xd 2 div 1 index 4 index sub dup $roy mul/$roh xd 2 div 2 copy dup mul
exch dup mul add sqrt $row dup mul $roh dup mul add sqrt add dup/$hei xd $fst
div/$wid xd 4 index add $roh add exch 5 index add $row add exch Tl $fan rotate
pop pop pop pop @dlt $fss 0 eq{ffcol $fty 3 eq{$hei dup neg dup m 2 mul @sqr}{
0 0 m 0 0 $hei 0 360 arc}ifelse $ffpnt{fill}{@np}ifelse}if 1.0 $pad 2 mul sub
dup scale $hei $fss $wid mul sub/$hei xd nff{ffcol $fty 3 eq{n $hei dup neg dup
m 2 mul @sqr}{n 0 0 m 0 0 $hei 0 360 arc}ifelse $ffpnt{fill}{@np}ifelse/$hei
$hei $wid sub def @ffnxt}repeat 5 rp}bd/@ftc{1 index 4 index sub dup $rox mul
/$row xd 2 div 1 index 4 index sub dup $roy mul/$roh xd 2 div 2 copy dup mul
exch dup mul add sqrt $row dup mul $roh dup mul add sqrt add dup/$hei xd $fst
div/$wid xd 4 index add $roh add exch 5 index add $row add exch Tl pop pop pop
pop @dlt $fss 0 eq{ffcol $ffpnt{fill}{@np}ifelse}{n}ifelse/$dang 180 $fst 1 sub
div def/$sang $dang -2 div 180 add def/$eang $dang 2 div 180 add def/$sang
$sang $dang $fss mul add def/$eang $eang $dang $fss mul add def/$sang $eang
$dang sub def nff{ffcol n 0 0 m 0 0 $hei $sang $fan add $eang $fan add arc
$ffpnt{fill}{@np}ifelse 0 0 m 0 0 $hei $eang neg $fan add $sang neg $fan add
arc $ffpnt{fill}{@np}ifelse/$sang $eang def/$eang $eang $dang add def @ffnxt}
repeat 5 rp}bd/@fstAdjust{72 0 matrix defaultmatrix dtransform exch dup mul
exch dup mul add sqrt currentscreen pop pop div dup mul 1 add cvi 2 256 InRange
$fsc 1 sub dup 0 le{pop 1}if mul/opt$fst xd AutoSteps dup 1 eq exch 3 eq or{
opt$fst dup dup $fst dup 3 1 roll div exch 3 -1 roll gt{/$adj xd/$fst xd}{pop
pop}ifelse}if AutoSteps dup 2 eq exch 3 eq or{opt$fst dup dup $fst dup 3 1 roll
div exch 3 -1 roll lt{/$adj xd/$fst xd}{pop pop}ifelse}if}bd/@ff{/old$fst $fst
def/$adj 1 def/$fss 0 def $o 1 eq setoverprint AutoSteps 0 gt{@fstAdjust}if 1 1
$fsc 1 sub{dup 1 sub $fsit 0 eq{$fsa exch 5 mul 5 getinterval aload pop pop
/$frk xd/$fry xd/$frm xd/$frc xd/$frn _ def/$frt 1 def $fsa exch 5 mul 5
getinterval aload pop $adj mul cvi $fss add/$fse xd/$tok xd/$toy xd/$tom xd
/$toc xd/$ton _ def/$tot 1 def}{$fsa exch 7 mul 7 getinterval aload pop pop
/$frt xd/$frn xd/$frk xd/$fry xd/$frm xd/$frc xd $fsa exch 7 mul 7 getinterval
aload pop $adj mul cvi $fss add/$fse xd/$tot xd/$ton xd/$tok xd/$toy xd/$tom xd
/$toc xd}ifelse $fsit 0 eq SepMode_5 0 eq or dup not CurrentInkName_5 $frn eq
and or{@sv $ctm setmatrix wclip Bbllx Bblly Bburx Bbury $fty 2 eq{@ftc}{1 index
3 index m 2 copy l 3 index 1 index l 3 index 3 index l @cp $fty dup 1 eq exch 3
eq or{@ftrs}{pop pop pop pop $fan rotate pathbbox @ftl}ifelse}ifelse @rs/$fss
$fse def}{1 0 0 0 0 _ $o @scc_5{wfill}if}ifelse}for @np/$fst old$fst def}bd/@k
{/$fil 2 def/$fmp xd/$roy xd/$rox xd/$pad xd/$fty xd/$fan xd $fty 1 eq{/$fan 0
def}if/$frb xd/$fst xd/$fsc xd/$fsa xd/$fsit 0 def}bd/@x{/$fil 2 def/$fmp xd
/$roy xd/$rox xd/$pad xd/$fty xd/$fan xd $fty 1 eq{/$fan 0 def}if/$frb xd/$fst
xd/$fsc xd/$fsa xd/$fsit 1 def}bd
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix @@txt @gr @np stringwidth pop 3 -1 roll add exch m}
forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if $fil 1 eq
{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq{/@@txt/@Pf ld
@ftx}{$t $c $m $y $k $n $o @scc_5{show}{pop}ifelse}ifelse}ifelse}ifelse $sdf
{$dsf $dsa $dsp @ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF
$SCA $SCP @ss}if $T $C $M $Y $K $N $O @scc_5{{currentpoint 3 -1 roll(0)dup 3 -1
roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat stroke @gr @np
stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp
@ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup
@gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}
def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm
matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat
ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel8Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%BeginResource: font WindsorOulBT
%!FontType1-1.0: WindsorOulBT 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /WindsorOulBT def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 73 /I putdup 67 /C putdup 69 /E putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexec
A22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B1EEC317BEA81B35036387EC1C16AA4B22B49183B9D4537448A93F3C667D0BE2D7B2A4443EFAAE8830123DE
CE95566A4E78A8BDF2B8134C30EDD3F4FCA9C6E3DB20AC85F1F00C29D50586ADF6FE1153C845842D92F43674CF77F9E768E3A48DB8A86F20238863880BE2DCC7
68C6B60BD4146513D7D24015E73EA38EE3DDBC55472D59E6577ECEF86F1DF392C126D2DEBB038F626CC929DA2FE8793A3C3EF35D0C5A17F0785F5AD376C8EDF6
D8B0272C603E55B55412F7C406D62971BF3ACEF0DE5F53D5364D01E4633AF6DD02EFE246CB4C6B06CA64571A86F291AD6B51245A79BE0F7F540DFCDBD02C99CD
C140293BA095EE3AA7B45F2BA6CB810C41C3F14A0577F4DD30AB7D5ECD369C939C544F440DEF64A39DA3E86ED85D0BA9FBC71266AC7D9D044BB8EE16FB946A3F
5A6E9D6EFCC18BB3D651DE838F728D986B1BF4FF08FC5EC4FAE1CC989652507B6EC1A3F40A33C292AEF7178D1355C45594AD417DAFEC61C2E589C3ECCA355E3F
28B0A99812D80C997BDE12A151F43C7F6789C081D9D769A9965C3C55BB7E13358A8617395E5CB60338FB8BBF10958ECA008C2DBD504B2366AA4EF9C6F4871ED9
37E2EFF89C2EB3B71CD5D4E71F1ECAD20A0E10E7A7760B139B992820AFA4D0AE70EA6F7701B7121A8D2B698086DC52625FA9A060CBC0F205C611DF2275138311
07388BCDD11306384A2E875621ECFABFCC22DCAA1418DB0BCF4181702495DB4E8C7CAC98A0A8B4B2BF02FD5050AE7DA2C8019D3E16D6FF1D3622762F9B2B245A
483E5A624F187600F2F8F92A6DE6BE74582FEA6E7B0ECEBDAEB9BF466849DC893A71318B00A8319E72FAF9F98471270B39E506C3DE65ABAF9F689057DB763174
0B8BE483D1A4587AEB97C92E2509DDC335E099D530991061E612A09670460E3DA53706909411E493F16028833935F5C6D508038FEA6DC1CABD6B2F78D16C57FE
6B08E740411EC6D863AF5FFC8A682063040AA18C27A9FC409130DC03F23B4F791249BA108924EA2A5428914B030379B95B1B2964C05EC1856BF850B02A157AB2
FCBD3F5E4934A40F16BF81963FA8B9849423AB7FD3F46B73C067E536F94B8F987E3D7AFFB0619A0BC813DD02C2CE4B4FF86D177F436A46DED3A80F33308FADB8
D8ADED2C497CC3E510C0799E0C349F954D84E170CC47EFC4C0E886CC19508A367DC573F216283FD986BD756C7EE9DF3067C179FC79815CEF9B5F349294C29426
60C4AA063D0D8379A701A7AD277399D6695D20F176B120E7244E820ACEA03B84E1D1E413FCE520022BBF5B972A3FC8E8D8E9FF74BFB14A93738FACC2A0D11403
501ABF6D683FAE21240D0CF4B7D7ED56D44EEFACCFA40A4B9388CF60FC3C45F52DACA8ADC10AC053454D88780856FF3E8EC9349BD722C5ACC538C8536B2FDEC9
D4EBCC708B5E2BBE537281D696AFB652161B74F234E5C24F0FE9B34EB059DD8DC04F4869BBE42D8EF0A3C5B77657B0BCB06116629F5C85B65AFCC6F9C22277B4
A14289EBFEE9F0BD76937D63C72F8D7AE9671DF2F8DA40A75952D167DFE8F2183B1BE665164D7A4599E275437C9B58FF3863F13AD3373E1B96F1E7F57CD91C72
A5FA6F8E01EC1198EC6B11FBE8CF6C3CE12ADB9F0BF4869DA99F371D9017C49C60264F11BFA6927B3BF51ADAA1689A8393BD2618B3F1643EB0BC50C9CB3DFCBE
BB9C4E2E5DC58882BC17B7A399853EFDC44C186D3983F1843344B9A1BBF870F544282F04971379904FE9D057C431D7A378C7CBF361E3C6388F7581A57D7DC887
4758F451B47634A8FB4435A23F11DDD2C75BF5459A90B786BDFA00AA31039CC3616C0BCD856B363D12755DC16AE8D3EE09544526E112B4763B0B3B8017BBDD24
F4252CF37D75294B501F9587C16C8166378B0CF507E89AF2A61A7FFA5AC3A548592384AF6562B2956A632E37B41C39ADC00F651F2FADBE30C966CD97F3163567
6FE4926839B4264F7D95012DAF1E8DB4EBBF4E2A0D38547C6E9FD0E111E8ECCDA1AEC65D89BE6A6535669E24C0EAD0C9277554BC398F176F5C561F40ECB3D9A4
F5C1FEC2E0E7199A7FFA13782DDAC800B0E9932223DA3E356052A14837829213CF98AD9EF3BA92AD4D345FCA74AF784208C93A82ADE3ABA97A3467E46184D293
9D7A130F5D1A22C3E36DC933DAAA2478D576540AAA19DB51DB39FA6F1F730415014F95259FE740297F68DF50A0A3A070E320BA4B641645B7115985B70386227C
BECEBC5B1C6C0404FB1B63E9D419355B3C25C1316D4B26B3CE6F4CD7DCAF361F65FCB840462EEB026524D2D754A02A411072A399267676C307C311BB969DF6F4
9726CEFFB854E8B7C19D6F773279859DDF402D3322064DD6F71BFDB7729BEB61AEAC1C816ACE3C5D3D413163C08A9F0F1C8603B757D8C132DD3ED5BAE6F6A497
0CD63D79E3DBBF37DB06392161CA8D6201FA0A6D28083B4363E22D5874FC227FE826600396FC66DD17C3EA92FFAC44A8B0D63D757DAB30C31517E0E957D7137B
67138F1976F3F1979EC35E557EFC1729B79D5FC31AD02449151BCB54EDADA4B2E6A641C0CBD288DD0C769BFFFE5A30AD662AF1DD187371313BDCC9087FE2C361
03C5DC632E42A011114FE116C67243057E8E1F4A98E27E36D347CCC4277E4384EA6A4CC1A18BE7DF2501D3B93CDCA6F929C7A75C1FFBD0C3950122B34F13253E
525F09B56B266F46EE06F5667ECBA91EC7123C2034106C4C8E1185FB1858271406313BED40B162372E5A986FD23F028331ABEFE02AF4AC4DCFE4
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
[ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 600 600 311 
309 322 769 623 932 842 165 345 345 405 833 311 476 311 597 623 
623 623 623 623 623 623 623 623 623 336 336 833 833 833 422 986 
822 729 786 804 767 674 856 839 383 585 741 675 1000 787 859 732 
866 802 804 770 714 830 1004 785 789 764 345 597 345 1000 500 500 
603 581 530 605 529 328 584 603 312 312 563 312 913 602 602 603 
589 440 529 382 569 567 878 582 545 584 500 500 500 833 600 623 
600 250 623 439 1000 637 637 500 1345 804 257 1250 600 764 600 600 
250 250 439 439 590 500 1000 500 822 529 257 901 600 584 789 623 
309 623 623 623 787 500 637 500 822 452 461 833 476 822 500 329 
833 411 411 500 503 500 311 500 411 452 461 952 952 952 422 822 
822 822 822 822 822 1188 786 767 767 767 767 383 383 383 383 808 
787 859 859 859 859 859 833 859 714 714 714 714 789 732 639 603 
603 603 603 603 603 825 530 529 529 529 529 312 312 312 312 602 
602 602 602 602 602 602 833 602 569 569 569 569 545 603 545 ]
CorelDrawReencodeVect /_R181-WindsorOulBT /WindsorOulBT Z
%%BeginResource: font Swis721LightCondensedBT
%!FontType1-1.0: Swis721LightCondensedBT 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /Swis721LightCondensedBT def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 83 /S putdup 87 /W putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexec
A22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B1FBAFA534B3439D415C1565DC15D5C1576346237FE40393FCB7509E5A491A4FCFE2CE81F53AE53BBC140BC
3C0753C3BB3B5C78DF441A981EFE89369A6126CBFDFB9D3533D47DD50D373BA9EAC837E2EF18A10CE68FD8C5096D798ACD6FFEF47F423AFC260FDBE2DC6BE719
63ACDA8A4F1BE4E04BF749EDB58FE2DB8F905299659F6A0605C22F047FD1FAEEE97CC438E17C57EB4C81B2C0F546CEC1EC9B54E270CB1AE9C5C9A1D16ECD70F6
88541AF535E21BF677BC798D0FCF8125CD70D1B7C8447C12781C16678F1A3353ADADBE5649FE953FBD410175158C682DF7F1B2306F58D6AE081C0FF69549C8C2
030E1ADEAF8ADF4B705E8F44BB9812617CE8C0CC3B237D2BAA1A9C56764492838D0F8CF95770A02E67841069D72319675CA71CF9DA0A3AEAA3987EE3713CF5F2
2A10DF963A2DEC04A1B60047C2A6075FBD5EBE5988CFDE091F2FA3E73B49CF108E459E756C87968DE52D137819B529AFA6E4D92B92071660C86F0A0F56B773BF
0A33470A53D818CAE7873FF8658E2D0C3A7ECD217A45F352EE8E5249954F2F54FEBF9612B8F6367A21EC8DC31E478AEA88DD3368622E3E55725E52EAD4A58FFC
E2999411D43501D8F2F9BC3BC18080563734A84A4A8E63A338A543E15998AE25764B8D21D735769AE10CB7A12FBB3E6BF79D39EC4BD8C4
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
[ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 600 600 234 
229 579 429 467 669 597 199 306 306 468 562 234 513 234 285 467 
467 467 467 467 467 467 467 467 467 234 234 833 455 833 396 1000 
505 509 542 553 453 441 551 559 207 391 491 428 714 554 550 494 
550 509 509 428 547 481 727 462 459 426 306 285 306 407 466 579 
396 455 424 455 418 250 455 441 221 271 376 229 697 441 447 455 
455 295 394 295 441 380 564 356 395 340 500 81 434 833 600 600 
600 234 467 387 1000 468 468 500 981 509 259 771 600 600 600 600 
234 234 387 387 590 500 1000 500 833 374 213 693 600 600 459 467 
229 467 467 606 467 500 468 500 833 297 455 833 560 833 500 322 
455 513 376 500 579 454 234 500 376 376 455 376 376 376 396 376 
376 376 376 376 510 734 542 600 453 537 453 334 367 396 600 553 
554 600 550 550 550 644 562 550 600 547 547 547 773 494 576 522 
396 396 396 396 396 644 424 600 600 600 600 600 221 221 221 431 
441 600 447 447 447 447 562 447 600 441 441 441 395 455 395 ]
CorelDrawReencodeVect /_R210-Swis721LightCondensedBT /Swis721LightCondensedBT Z
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
121.46683 238.57710 137.05880 238.58135 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 1.00800 1.00800 0.00000 @w
/$fm 0 def
134.77691 238.58079 m
121.46683 238.57710 L
S
@j
0.00 0.00 0.00 1.00 K
0.00 0.00 0.00 1.00 k
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.00800 1.00800 0 @w
137.05880 238.58135 m
134.03452 239.20356 131.51849 240.03128 128.99622 241.06904 C
129.75250 239.40595 129.75109 237.74683 128.99764 236.08743 C
131.51735 237.12633 134.03509 237.95972 137.05880 238.58135 C
f
@J

@rax %Note: Object
179.92885 198.03883 180.04082 211.58050 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 1.00800 1.00800 0.00000 @w
/$fm 0 def
180.02211 209.29861 m
179.92885 198.03883 L
S
@j
0.00 0.00 0.00 1.00 K
0.00 0.00 0.00 1.00 k
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.00800 1.00800 0 @w
180.04082 211.58050 m
179.39282 208.56189 178.54356 206.05266 177.48454 203.53946 C
179.15386 204.28157 180.81298 204.26598 182.46586 203.49808 C
181.44850 206.02658 180.63666 208.55140 180.04082 211.58050 C
f
@J

@rax %Note: Object
149.06466 220.86227 205.94296 261.97313 @E
0 O 0 @g
[ 0.00 0.00 0.00 0.00  0
0.00 0.00 0.00 0.20  128
] 2 128 0 0 1 0.00 0.00 0.00 50 @k
/$fm 0 def
183.60000 260.74800 m
177.98400 262.83600 170.71200 261.90000 165.16800 260.82000 c
160.12800 259.95600 151.27200 255.63600 149.32800 250.45200 c
148.60800 248.29200 149.54400 245.62800 149.97600 243.46800 c
150.55200 240.66000 150.12000 236.34000 151.48800 233.74800 c
153.28800 230.29200 160.12800 228.06000 163.65600 227.34000 c
169.34400 226.18800 175.75200 226.83600 181.22400 224.82000 c
183.88800 223.81200 186.26400 221.65200 189.57600 221.14800 c
193.96800 220.50000 201.74400 220.57200 203.90400 225.54000 c
204.91200 227.98800 203.54400 231.30000 203.25600 233.74800 c
202.96800 236.62800 202.89600 241.09200 203.90400 243.82800 c
205.34400 247.64400 207.00000 251.10000 205.12800 255.34800 c
204.55200 256.64400 190.36800 258.15600 183.60000 260.74800 c
@c
F

@rax %Note: Object
157.84214 227.75868 197.96060 255.90302 @E
 0 O 0 @g
0.00 0.00 0.00 0.10 k
/$fm 0 def
182.21499 255.04809 m
178.23997 256.50000 173.12400 255.85058 169.18838 255.12435 c
165.64677 254.51320 159.38929 251.57112 158.05106 248.01789 c
157.50000 246.52772 158.16926 244.69370 158.48419 243.24180 c
158.91704 241.29326 158.60211 238.35146 159.54661 236.59370 c
160.84545 234.22479 165.64677 232.69663 168.12595 232.19972 c
172.14009 231.39751 176.66561 231.81789 180.52243 230.44224 c
182.41172 229.79282 184.10400 228.30265 186.42586 227.95880 c
189.53461 227.50016 195.00520 227.57669 196.50076 230.97713 c
197.20885 232.62009 196.26435 234.91247 196.06762 236.59370 c
195.87090 238.54224 195.79209 241.59912 196.50076 243.47112 c
197.56261 246.10734 198.70441 248.47625 197.36646 251.38035 c
196.97301 252.25909 186.97663 253.29033 182.21499 255.04809 c
@c
F

@rax %Note: Object
172.85528 242.04643 193.17600 242.95096 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
193.17600 242.13600 m
186.31191 241.83780 179.70548 242.30211 172.85528 242.95096 C
S

@rax %Note: Object
185.33112 233.41975 186.55200 244.44000 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
186.55200 244.44000 m
186.57099 240.73455 186.02419 237.14589 185.33112 233.41975 C
S

@rax %Note: Object
175.32539 239.59814 192.52800 241.15294 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
192.52800 239.76000 m
186.27392 239.25572 181.45049 239.96750 175.32539 241.15294 C
S

@rax %Note: Object
186.78954 234.80164 188.38431 244.15200 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
188.35200 244.15200 m
188.54447 240.78302 187.86472 238.15162 186.78954 234.80164 C
S

@rax 167.06183 245.70595 188.28425 253.50775 @E
[0.00028346 0.00000000 0.00000000 0.00028346 177.76799350 246.09599100] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e
/_R181-WindsorOulBT 35278.00000 z
-37769 0 (I) @t
-20638 0 (C) @t
10711 0 (E) @t
T
@rax %Note: Object
112.53600 229.56775 121.64315 245.52000 @E
 0 O 0 @g
0.00 0.00 0.00 0.10 k
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 0.40 K
0 1.00800 1.00800 0.00000 @w
/$fm 0 def
117.08957 245.52000 m
119.59767 245.52000 121.64315 241.93701 121.64315 237.54387 c
121.64315 233.15046 119.59767 229.56775 117.08957 229.56775 c
114.58148 229.56775 112.53600 233.15046 112.53600 237.54387 c
112.53600 241.93701 114.58148 245.52000 117.08957 245.52000 c
@c
B

@rax 114.52677 233.91043 119.15518 241.67027 @E
[0.00028346 0.00000000 0.00000000 0.00028346 117.07199572 234.07199144] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e
/_R210-Swis721LightCondensedBT 35278.00000 z
-8979 0 (S) @t
T
@rax %Note: Object
173.30400 187.99200 186.67276 198.19162 @E
 0 O 0 @g
0.00 0.00 0.00 0.10 k
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 0.40 K
0 1.00800 1.00800 0.00000 @w
/$fm 0 def
173.30400 193.09181 m
173.30400 195.90094 176.30674 198.19162 179.98838 198.19162 c
183.67030 198.19162 186.67276 195.90094 186.67276 193.09181 c
186.67276 190.28296 183.67030 187.99200 179.98838 187.99200 c
176.30674 187.99200 173.30400 190.28296 173.30400 193.09181 c
@c
B

@rax 176.50885 189.00000 183.56060 196.45172 @E
[0.00028346 0.00000000 0.00000000 0.00028346 180.14399341 188.99999309] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e
/_R210-Swis721LightCondensedBT 35278.00000 z
-12824 0 (W) @t
T
%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel8Dict
%%+ font WindsorOulBT
%%+ font Swis721LightCondensedBT
%%EOF
